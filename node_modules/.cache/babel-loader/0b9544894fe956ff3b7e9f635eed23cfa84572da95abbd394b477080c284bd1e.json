{"ast":null,"code":"var _jsxFileName = \"/Users/Zuri/Desktop/interview-calendar-testTask/src/components/App/App.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import styled from \"styled-components\";\n// import {\n//   format,\n//   add,\n//   set,\n//   addWeeks,\n//   isDate,\n//   parse,\n//   isEqual,\n//   startOfWeek,\n//   endOfWeek,\n//   startOfToday,\n//   eachDayOfInterval,\n//   eachHourOfInterval,\n// } from \"date-fns\";\n\n// const Wrapper = styled.div`\n//   max-width: 740px;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n\n//   @media (min-width: 740px) {\n//     margin: 0 auto;\n//   }\n// `;\n\n// const Header = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   padding: 20px 0;\n//   margin: 0 auto;\n//   width: 87%;\n// `;\n\n// const FixedHeader = styled.div`\n//   background-color: #fff;\n//   position: sticky;\n//   top: 0;\n//   width: 100%;\n// `;\n\n// const HeaderContainer = styled.div`\n//   display: grid;\n//   grid-template-areas:\n//     \"a a a a a a a\"\n//     \"b b b b b b b\";\n//   grid-template-columns: repeat(7, 1fr);\n//   place-items: end;\n//   background-color: #f6f6f6;\n//   border-top: 1px solid #e6e6e6;\n//   border-bottom: 1px solid #e6e6e6;\n//   padding: 0 0 8px;\n// `;\n\n// const WeekContainer = styled.div`\n//   display: flex;\n//   grid-area: a;\n//   width: 87%;\n//   justify-content: space-around;\n// `;\n\n// const Week = styled.div`\n//   display: flex;\n//   flex-direction: column;\n\n//   span {\n//     color: black;\n//     text-align: center;\n//     cursor: pointer;\n//   }\n\n//   span:first-of-type {\n//     font-size: 8px;\n//     padding: 7px 0 4px;\n//   }\n\n//   span:last-of-type {\n//     font-size: 13px;\n//     box-sizing: content-box;\n//     padding: 5px;\n//     width: 15px;\n//     height: 15px;\n//     line-height: 1.2;\n//   }\n\n//   &.current span:last-of-type {\n//     border-radius: 50%;\n//     background-color: #a6a6a7;\n//     color: white;\n//   }\n\n//   &.today span:last-of-type {\n//     color: red;\n//   }\n\n//   &.today.current span:last-of-type {\n//     color: white;\n//     background-color: #fe4141;\n//     border-radius: 50%;\n//   }\n// `;\n\n// const YearSpan = styled.span`\n//   font-size: 12px;\n//   line-height: 1.6;\n//   grid-area: a;\n// `;\n\n// const WeekControls = styled.div`\n//   display: grid;\n//   grid-template-columns: repeat(7, 1fr);\n//   width: 87%;\n//   padding: 5px 0 0;\n//   grid-area: b;\n//   place-items: center;\n//   grid-template-areas: \"b a a a a a c\";\n// `;\n\n// const Title = styled.h1`\n//   margin: 0;\n//   font-weight: 300;\n//   font-size: 16px;\n// `;\n\n// const ControlButton = styled.button`\n//   cursor: pointer;\n//   border: none;\n//   outline: none;\n//   background: none;\n//   color: #f41627;\n//   padding: 0 16px;\n//   font-weight: 300;\n//   &:nth-of-type(1) {\n//     grid-area: b;\n//   }\n//   &:nth-of-type(2) {\n//     grid-area: c;\n//   }\n// `;\n\n// const AddButton = styled.button`\n//   background: none;\n//   border: none;\n//   cursor: pointer;\n//   font-size: 22px;\n//   font-weight: 300;\n//   color: #f41627;\n//   padding: 0;\n// `;\n\n// const Calendar = styled.table`\n//   border-collapse: collapse;\n//   width: 100%;\n//   overflow-y: scroll;\n//   height: 100vh;\n// `;\n\n// const TableRow = styled.tr`\n//   td.hasEvent {\n//     background-color: #e6e6ff;\n//     padding: 2px;\n//     outline: solid 1px white;\n//     outline-offset: -2px;\n//     cursor: pointer;\n//   }\n//   td.hasEvent.active {\n//     background-color: #a4a5ff;\n//     background-size: cover;\n//     pointer-events: none;\n//   }\n// `;\n\n// const TableCell = styled.td`\n//   border: 1px solid #e6e6e6;\n//   min-height: 32px;\n//   max-height: 54px;\n//   width: 42px;\n//   box-sizing: border-box;\n\n//   &:nth-of-type(1) {\n//     border: none;\n//     text-align: center;\n//     vertical-align: bottom;\n//   }\n\n//   &:nth-of-type(2) {\n//     border-left: none;\n//   }\n\n//   padding: 0;\n//   font-size: 11px;\n//   color: #c0c0c0;\n//   @media (min-width: 510px) {\n//     width: 74px;\n//     height: 58px;\n//   }\n// `;\n\n// const ToTodayBtn = styled.button`\n//   color: #f41627;\n//   background-color: transparent;\n//   border: none;\n//   outline: none;\n//   cursor: pointer;\n//   padding: 0;\n// `;\n\n// const DeleteButton = styled(ToTodayBtn)``;\n\n// const CalendarFooter = styled.footer`\n//   width: 100%;\n//   background-color: #f6f6f6;\n//   border-top: 1px solid #e9e9e9;\n//   position: sticky;\n//   bottom: 0;\n//   display: flex;\n//   padding: 15px 0;\n// `;\n\n// const CalendarFooterContainer = styled.div`\n//   display: flex;\n//   width: 87%;\n//   margin: 0 auto;\n//   justify-content: space-between;\n// `;\n\n// const App = () => {\n//   const today = startOfToday();\n//   const [selectedDate, setSelectedDate] = useState(today);\n//   const [currentDate, setCurrentDate] = useState(new Date());\n//   const [events, setEvents] = useState([]);\n//   const [toDelete, setToDelete] = useState(\"\");\n//   const [currentWeek, setCurrentWeek] = useState(\n//     eachDayOfInterval({\n//       start: startOfWeek(today, { weekStartsOn: 1 }),\n//       end: endOfWeek(today, { weekStartsOn: 1 }),\n//     })\n//   );\n//   const startHour = set(selectedDate, { hours: 9 });\n//   const endHour = set(selectedDate, { hours: 22 });\n//   const hours = eachHourOfInterval({ start: startHour, end: endHour });\n\n//   const handleAddEvent = () => {\n//     let enteredDate = prompt(\"Enter event time:\\nYYYY-MM-DD HH:mm:ss\");\n//     const re = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$/;\n//     if (enteredDate !== null && enteredDate !== \"\") {\n//       const parsedDate = parse(enteredDate, \"yyyy-MM-dd HH:mm:ss\", new Date());\n//       if (isDate(parsedDate) && re.test(enteredDate)) {\n//         const eventDate = format(parsedDate, \"yyyy-MM-dd HH:mm:ss\");\n//         const event = {\n//           date: format(new Date(eventDate), \"yyyy-MM-dd\"),\n//           time: format(new Date(eventDate), \"HH:mm\"),\n//         };\n//         setEvents([...events, event]);\n//       } else {\n//         alert(\n//           \"Invalid date format. Please enter the date in the format YYYY-MM-DD HH:mm:ss\"\n//         );\n//       }\n//     }\n//   };\n\n//   const chooseToDelete = (e) => {\n//     const target = e.target;\n//     document\n//       .querySelectorAll(\"td.hasEvent\")\n//       .forEach((td) => td.classList.remove(\"active\"));\n//     if (target.classList.contains(\"hasEvent\")) {\n//       target.classList.add(\"active\");\n//       setToDelete(target.classList[1]);\n//     } else {\n//       setToDelete(\"\");\n//     }\n//   };\n\n//   const handleDeleteEvent = () => {\n//     const updatedEvents = events.filter(\n//       (event) =>\n//         event.date !== format(selectedDate, \"yyyy-MM-dd\") &&\n//         event.time !== format(selectedDate, \"HH:mm\")\n//     );\n//     setEvents(updatedEvents);\n//   };\n\n//   const handlePrevWeek = () => {\n//     setCurrentWeek(\n//       eachDayOfInterval({\n//         start: startOfWeek(add(currentWeek[0], { weeks: -1 }), {\n//           weekStartsOn: 1,\n//         }),\n//         end: endOfWeek(add(currentWeek[0], { weeks: -1 }), { weekStartsOn: 1 }),\n//       })\n//     );\n//     setCurrentDate((prevDate) => addWeeks(prevDate, -1));\n//     setToDelete(\"\");\n//   };\n\n//   const handleNextWeek = () => {\n//     setCurrentWeek(\n//       eachDayOfInterval({\n//         start: startOfWeek(add(currentWeek[0], { weeks: 1 }), {\n//           weekStartsOn: 1,\n//         }),\n//         end: endOfWeek(add(currentWeek[0], { weeks: 1 }), { weekStartsOn: 1 }),\n//       })\n//     );\n//     setCurrentDate((prevDate) => addWeeks(prevDate, 1));\n\n//     setToDelete(\"\");\n//   };\n\n//   const toToday = () => {\n//     setSelectedDate(today);\n//     setCurrentWeek(\n//       eachDayOfInterval({\n//         start: startOfWeek(today, { weekStartsOn: 1 }),\n//         end: endOfWeek(today, { weekStartsOn: 1 }),\n//       })\n//     );\n//     setCurrentDate(today);\n//     setToDelete(\"\");\n//   };\n\n//   useEffect(() => {\n//     const savedEvents = localStorage.getItem(\"events\");\n//     if (savedEvents) {\n//       setEvents(JSON.parse(savedEvents));\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     if (events.length > 0) {\n//       localStorage.setItem(\"events\", JSON.stringify(events));\n//     }\n//   }, [events]);\n\n//   return (\n//     <Wrapper>\n//       <FixedHeader>\n//         <Header>\n//           <Title>Interview Calendar</Title>\n//           <AddButton onClick={handleAddEvent}>+</AddButton>\n//         </Header>\n//         <HeaderContainer>\n//           <WeekContainer>\n//             {currentWeek.map((dayOfWeek) => (\n//               <Week\n//                 key={dayOfWeek}\n//                 onClick={() => {\n//                   setSelectedDate(dayOfWeek);\n//                   setCurrentDate(dayOfWeek);\n//                   setToDelete(\"\");\n//                 }}\n//                 className={`${isEqual(dayOfWeek, today) ? \"today\" : \"\"} ${\n//                   isEqual(dayOfWeek, selectedDate) ? \"current\" : \"\"\n//                 }`}\n//               >\n//                 <span>{format(dayOfWeek, \"EEEEE\")}</span>\n//                 <span>{format(dayOfWeek, \"d\")}</span>\n//               </Week>\n//             ))}\n//           </WeekContainer>\n\n//           <WeekControls>\n//             <ControlButton onClick={handlePrevWeek}>&lt;</ControlButton>\n//             <YearSpan>\n//               {format(currentDate, \"MMMM yyyy\", {\n//                 awareOfUnicodeTokens: true,\n//               })}\n//             </YearSpan>\n//             <ControlButton onClick={handleNextWeek}>&gt;</ControlButton>\n//           </WeekControls>\n//         </HeaderContainer>\n//       </FixedHeader>\n//       <Calendar>\n//         <tbody>\n//           {hours.map((hour) => (\n//             <TableRow key={hour}>\n//               <TableCell>{format(hour, \"HH:mm\")}</TableCell>\n//               {currentWeek.map((day) => {\n//                 const event = events.find(\n//                   (e) =>\n//                     e.time === format(new Date(hour), \"HH:mm\") &&\n//                     format(day, \"yyyy-MM-dd\") ===\n//                       format(new Date(e.date), \"yyyy-MM-dd\")\n//                 );\n\n//                 return (\n//                   <TableCell\n//                     key={day}\n//                     className={event ? \"hasEvent\" : \"\"}\n//                     onClick={(e) => {\n//                       chooseToDelete(e);\n//                     }}\n//                   ></TableCell>\n//                 );\n//               })}\n//             </TableRow>\n//           ))}\n//         </tbody>\n//       </Calendar>\n//       <CalendarFooter>\n//         <CalendarFooterContainer>\n//           <ToTodayBtn onClick={toToday}>Today</ToTodayBtn>\n//           {toDelete !== \"\" && (\n//             <DeleteButton onClick={handleDeleteEvent}>Delete</DeleteButton>\n//           )}\n//         </CalendarFooterContainer>\n//       </CalendarFooter>\n//     </Wrapper>\n//   );\n// };\n\n// export default App;\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { format, add, set, addWeeks, isDate, parse, startOfWeek, endOfWeek, startOfToday, eachDayOfInterval, eachHourOfInterval } from \"date-fns\";\nimport CalendarHeader from \"../CalendarHeader/CalendarHeader\";\nimport CalendarBody from \"../CalendarBody/CalendarBody\";\nimport CalendarFooter from \"../CalendarFooter/CalendarFooter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  max-width: 740px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (min-width: 740px) {\n    margin: 0 auto;\n  }\n`;\n_c = Wrapper;\nconst App = () => {\n  _s();\n  const today = startOfToday();\n  const [selectedDate, setSelectedDate] = useState(today);\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [events, setEvents] = useState([]);\n  const [toDelete, setToDelete] = useState(\"\");\n  const [currentWeek, setCurrentWeek] = useState(eachDayOfInterval({\n    start: startOfWeek(today, {\n      weekStartsOn: 1\n    }),\n    end: endOfWeek(today, {\n      weekStartsOn: 1\n    })\n  }));\n  const startHour = set(selectedDate, {\n    hours: 9\n  });\n  const endHour = set(selectedDate, {\n    hours: 22\n  });\n  const hours = eachHourOfInterval({\n    start: startHour,\n    end: endHour\n  });\n  const handleAddEvent = () => {\n    let enteredDate = prompt(\"Enter event time:\\nYYYY-MM-DD HH:mm:ss\");\n    const re = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$/;\n    if (enteredDate !== null && enteredDate !== \"\") {\n      const parsedDate = parse(enteredDate, \"yyyy-MM-dd HH:mm:ss\", new Date());\n      if (isDate(parsedDate) && re.test(enteredDate)) {\n        const eventDate = format(parsedDate, \"yyyy-MM-dd HH:mm:ss\");\n        const event = {\n          date: format(new Date(eventDate), \"yyyy-MM-dd\"),\n          time: format(new Date(eventDate), \"HH:mm\")\n        };\n        setEvents([...events, event]);\n      } else {\n        alert(\"Invalid date format. Please enter the date in the format YYYY-MM-DD HH:mm:ss\");\n      }\n    }\n  };\n  const chooseToDelete = e => {\n    const target = e.target;\n    document.querySelectorAll(\"td.hasEvent\").forEach(td => td.classList.remove(\"active\"));\n    if (target.classList.contains(\"hasEvent\")) {\n      target.classList.add(\"active\");\n      setToDelete(target.classList[1]);\n    } else {\n      setToDelete(\"\");\n    }\n  };\n  const handleDeleteEvent = () => {\n    const updatedEvents = events.filter(event => event.date !== format(selectedDate, \"yyyy-MM-dd\") && event.time !== format(selectedDate, \"HH:mm\"));\n    setEvents(updatedEvents);\n  };\n  const handlePrevWeek = () => {\n    setCurrentWeek(eachDayOfInterval({\n      start: startOfWeek(add(currentWeek[0], {\n        weeks: -1\n      }), {\n        weekStartsOn: 1\n      }),\n      end: endOfWeek(add(currentWeek[0], {\n        weeks: -1\n      }), {\n        weekStartsOn: 1\n      })\n    }));\n    setCurrentDate(prevDate => addWeeks(prevDate, -1));\n    setToDelete(\"\");\n  };\n  const handleNextWeek = () => {\n    setCurrentWeek(eachDayOfInterval({\n      start: startOfWeek(add(currentWeek[0], {\n        weeks: 1\n      }), {\n        weekStartsOn: 1\n      }),\n      end: endOfWeek(add(currentWeek[0], {\n        weeks: 1\n      }), {\n        weekStartsOn: 1\n      })\n    }));\n    setCurrentDate(prevDate => addWeeks(prevDate, 1));\n    setToDelete(\"\");\n  };\n  const toToday = () => {\n    setSelectedDate(today);\n    setCurrentWeek(eachDayOfInterval({\n      start: startOfWeek(today, {\n        weekStartsOn: 1\n      }),\n      end: endOfWeek(today, {\n        weekStartsOn: 1\n      })\n    }));\n    setCurrentDate(today);\n    setToDelete(\"\");\n  };\n  useEffect(() => {\n    const savedEvents = localStorage.getItem(\"events\");\n    if (savedEvents) {\n      setEvents(JSON.parse(savedEvents));\n    }\n  }, []);\n  useEffect(() => {\n    if (events.length > 0) {\n      localStorage.setItem(\"events\", JSON.stringify(events));\n    }\n  }, [events]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(CalendarHeader, {\n      today: today,\n      currentWeek: currentWeek,\n      setCurrentWeek: setCurrentWeek,\n      currentDate: currentDate,\n      setCurrentDate: setCurrentDate,\n      selectedDate: selectedDate,\n      setSelectedDate: setSelectedDate,\n      setToDelete: setToDelete,\n      onAddEvent: handleAddEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarBody, {\n      hours: hours,\n      currentWeek: currentWeek,\n      events: events,\n      onDelete: chooseToDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarFooter, {\n      onToToday: toToday,\n      toDelete: toDelete,\n      onDeleteEvent: handleDeleteEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 560,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"iuo1yVz6umlVa+pgoiqGuCVoxS4=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","styled","format","add","set","addWeeks","isDate","parse","startOfWeek","endOfWeek","startOfToday","eachDayOfInterval","eachHourOfInterval","CalendarHeader","CalendarBody","CalendarFooter","jsxDEV","_jsxDEV","Wrapper","div","_c","App","_s","today","selectedDate","setSelectedDate","currentDate","setCurrentDate","Date","events","setEvents","toDelete","setToDelete","currentWeek","setCurrentWeek","start","weekStartsOn","end","startHour","hours","endHour","handleAddEvent","enteredDate","prompt","re","parsedDate","test","eventDate","event","date","time","alert","chooseToDelete","e","target","document","querySelectorAll","forEach","td","classList","remove","contains","handleDeleteEvent","updatedEvents","filter","handlePrevWeek","weeks","prevDate","handleNextWeek","toToday","savedEvents","localStorage","getItem","JSON","length","setItem","stringify","children","onAddEvent","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","onToToday","onDeleteEvent","_c2","$RefreshReg$"],"sources":["/Users/Zuri/Desktop/interview-calendar-testTask/src/components/App/App.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import styled from \"styled-components\";\n// import {\n//   format,\n//   add,\n//   set,\n//   addWeeks,\n//   isDate,\n//   parse,\n//   isEqual,\n//   startOfWeek,\n//   endOfWeek,\n//   startOfToday,\n//   eachDayOfInterval,\n//   eachHourOfInterval,\n// } from \"date-fns\";\n\n// const Wrapper = styled.div`\n//   max-width: 740px;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n\n//   @media (min-width: 740px) {\n//     margin: 0 auto;\n//   }\n// `;\n\n// const Header = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   padding: 20px 0;\n//   margin: 0 auto;\n//   width: 87%;\n// `;\n\n// const FixedHeader = styled.div`\n//   background-color: #fff;\n//   position: sticky;\n//   top: 0;\n//   width: 100%;\n// `;\n\n// const HeaderContainer = styled.div`\n//   display: grid;\n//   grid-template-areas:\n//     \"a a a a a a a\"\n//     \"b b b b b b b\";\n//   grid-template-columns: repeat(7, 1fr);\n//   place-items: end;\n//   background-color: #f6f6f6;\n//   border-top: 1px solid #e6e6e6;\n//   border-bottom: 1px solid #e6e6e6;\n//   padding: 0 0 8px;\n// `;\n\n// const WeekContainer = styled.div`\n//   display: flex;\n//   grid-area: a;\n//   width: 87%;\n//   justify-content: space-around;\n// `;\n\n// const Week = styled.div`\n//   display: flex;\n//   flex-direction: column;\n\n//   span {\n//     color: black;\n//     text-align: center;\n//     cursor: pointer;\n//   }\n\n//   span:first-of-type {\n//     font-size: 8px;\n//     padding: 7px 0 4px;\n//   }\n\n//   span:last-of-type {\n//     font-size: 13px;\n//     box-sizing: content-box;\n//     padding: 5px;\n//     width: 15px;\n//     height: 15px;\n//     line-height: 1.2;\n//   }\n\n//   &.current span:last-of-type {\n//     border-radius: 50%;\n//     background-color: #a6a6a7;\n//     color: white;\n//   }\n\n//   &.today span:last-of-type {\n//     color: red;\n//   }\n\n//   &.today.current span:last-of-type {\n//     color: white;\n//     background-color: #fe4141;\n//     border-radius: 50%;\n//   }\n// `;\n\n// const YearSpan = styled.span`\n//   font-size: 12px;\n//   line-height: 1.6;\n//   grid-area: a;\n// `;\n\n// const WeekControls = styled.div`\n//   display: grid;\n//   grid-template-columns: repeat(7, 1fr);\n//   width: 87%;\n//   padding: 5px 0 0;\n//   grid-area: b;\n//   place-items: center;\n//   grid-template-areas: \"b a a a a a c\";\n// `;\n\n// const Title = styled.h1`\n//   margin: 0;\n//   font-weight: 300;\n//   font-size: 16px;\n// `;\n\n// const ControlButton = styled.button`\n//   cursor: pointer;\n//   border: none;\n//   outline: none;\n//   background: none;\n//   color: #f41627;\n//   padding: 0 16px;\n//   font-weight: 300;\n//   &:nth-of-type(1) {\n//     grid-area: b;\n//   }\n//   &:nth-of-type(2) {\n//     grid-area: c;\n//   }\n// `;\n\n// const AddButton = styled.button`\n//   background: none;\n//   border: none;\n//   cursor: pointer;\n//   font-size: 22px;\n//   font-weight: 300;\n//   color: #f41627;\n//   padding: 0;\n// `;\n\n// const Calendar = styled.table`\n//   border-collapse: collapse;\n//   width: 100%;\n//   overflow-y: scroll;\n//   height: 100vh;\n// `;\n\n// const TableRow = styled.tr`\n//   td.hasEvent {\n//     background-color: #e6e6ff;\n//     padding: 2px;\n//     outline: solid 1px white;\n//     outline-offset: -2px;\n//     cursor: pointer;\n//   }\n//   td.hasEvent.active {\n//     background-color: #a4a5ff;\n//     background-size: cover;\n//     pointer-events: none;\n//   }\n// `;\n\n// const TableCell = styled.td`\n//   border: 1px solid #e6e6e6;\n//   min-height: 32px;\n//   max-height: 54px;\n//   width: 42px;\n//   box-sizing: border-box;\n\n//   &:nth-of-type(1) {\n//     border: none;\n//     text-align: center;\n//     vertical-align: bottom;\n//   }\n\n//   &:nth-of-type(2) {\n//     border-left: none;\n//   }\n\n//   padding: 0;\n//   font-size: 11px;\n//   color: #c0c0c0;\n//   @media (min-width: 510px) {\n//     width: 74px;\n//     height: 58px;\n//   }\n// `;\n\n// const ToTodayBtn = styled.button`\n//   color: #f41627;\n//   background-color: transparent;\n//   border: none;\n//   outline: none;\n//   cursor: pointer;\n//   padding: 0;\n// `;\n\n// const DeleteButton = styled(ToTodayBtn)``;\n\n// const CalendarFooter = styled.footer`\n//   width: 100%;\n//   background-color: #f6f6f6;\n//   border-top: 1px solid #e9e9e9;\n//   position: sticky;\n//   bottom: 0;\n//   display: flex;\n//   padding: 15px 0;\n// `;\n\n// const CalendarFooterContainer = styled.div`\n//   display: flex;\n//   width: 87%;\n//   margin: 0 auto;\n//   justify-content: space-between;\n// `;\n\n// const App = () => {\n//   const today = startOfToday();\n//   const [selectedDate, setSelectedDate] = useState(today);\n//   const [currentDate, setCurrentDate] = useState(new Date());\n//   const [events, setEvents] = useState([]);\n//   const [toDelete, setToDelete] = useState(\"\");\n//   const [currentWeek, setCurrentWeek] = useState(\n//     eachDayOfInterval({\n//       start: startOfWeek(today, { weekStartsOn: 1 }),\n//       end: endOfWeek(today, { weekStartsOn: 1 }),\n//     })\n//   );\n//   const startHour = set(selectedDate, { hours: 9 });\n//   const endHour = set(selectedDate, { hours: 22 });\n//   const hours = eachHourOfInterval({ start: startHour, end: endHour });\n\n//   const handleAddEvent = () => {\n//     let enteredDate = prompt(\"Enter event time:\\nYYYY-MM-DD HH:mm:ss\");\n//     const re = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$/;\n//     if (enteredDate !== null && enteredDate !== \"\") {\n//       const parsedDate = parse(enteredDate, \"yyyy-MM-dd HH:mm:ss\", new Date());\n//       if (isDate(parsedDate) && re.test(enteredDate)) {\n//         const eventDate = format(parsedDate, \"yyyy-MM-dd HH:mm:ss\");\n//         const event = {\n//           date: format(new Date(eventDate), \"yyyy-MM-dd\"),\n//           time: format(new Date(eventDate), \"HH:mm\"),\n//         };\n//         setEvents([...events, event]);\n//       } else {\n//         alert(\n//           \"Invalid date format. Please enter the date in the format YYYY-MM-DD HH:mm:ss\"\n//         );\n//       }\n//     }\n//   };\n\n//   const chooseToDelete = (e) => {\n//     const target = e.target;\n//     document\n//       .querySelectorAll(\"td.hasEvent\")\n//       .forEach((td) => td.classList.remove(\"active\"));\n//     if (target.classList.contains(\"hasEvent\")) {\n//       target.classList.add(\"active\");\n//       setToDelete(target.classList[1]);\n//     } else {\n//       setToDelete(\"\");\n//     }\n//   };\n\n//   const handleDeleteEvent = () => {\n//     const updatedEvents = events.filter(\n//       (event) =>\n//         event.date !== format(selectedDate, \"yyyy-MM-dd\") &&\n//         event.time !== format(selectedDate, \"HH:mm\")\n//     );\n//     setEvents(updatedEvents);\n//   };\n\n//   const handlePrevWeek = () => {\n//     setCurrentWeek(\n//       eachDayOfInterval({\n//         start: startOfWeek(add(currentWeek[0], { weeks: -1 }), {\n//           weekStartsOn: 1,\n//         }),\n//         end: endOfWeek(add(currentWeek[0], { weeks: -1 }), { weekStartsOn: 1 }),\n//       })\n//     );\n//     setCurrentDate((prevDate) => addWeeks(prevDate, -1));\n//     setToDelete(\"\");\n//   };\n\n//   const handleNextWeek = () => {\n//     setCurrentWeek(\n//       eachDayOfInterval({\n//         start: startOfWeek(add(currentWeek[0], { weeks: 1 }), {\n//           weekStartsOn: 1,\n//         }),\n//         end: endOfWeek(add(currentWeek[0], { weeks: 1 }), { weekStartsOn: 1 }),\n//       })\n//     );\n//     setCurrentDate((prevDate) => addWeeks(prevDate, 1));\n\n//     setToDelete(\"\");\n//   };\n\n//   const toToday = () => {\n//     setSelectedDate(today);\n//     setCurrentWeek(\n//       eachDayOfInterval({\n//         start: startOfWeek(today, { weekStartsOn: 1 }),\n//         end: endOfWeek(today, { weekStartsOn: 1 }),\n//       })\n//     );\n//     setCurrentDate(today);\n//     setToDelete(\"\");\n//   };\n\n//   useEffect(() => {\n//     const savedEvents = localStorage.getItem(\"events\");\n//     if (savedEvents) {\n//       setEvents(JSON.parse(savedEvents));\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     if (events.length > 0) {\n//       localStorage.setItem(\"events\", JSON.stringify(events));\n//     }\n//   }, [events]);\n\n//   return (\n//     <Wrapper>\n//       <FixedHeader>\n//         <Header>\n//           <Title>Interview Calendar</Title>\n//           <AddButton onClick={handleAddEvent}>+</AddButton>\n//         </Header>\n//         <HeaderContainer>\n//           <WeekContainer>\n//             {currentWeek.map((dayOfWeek) => (\n//               <Week\n//                 key={dayOfWeek}\n//                 onClick={() => {\n//                   setSelectedDate(dayOfWeek);\n//                   setCurrentDate(dayOfWeek);\n//                   setToDelete(\"\");\n//                 }}\n//                 className={`${isEqual(dayOfWeek, today) ? \"today\" : \"\"} ${\n//                   isEqual(dayOfWeek, selectedDate) ? \"current\" : \"\"\n//                 }`}\n//               >\n//                 <span>{format(dayOfWeek, \"EEEEE\")}</span>\n//                 <span>{format(dayOfWeek, \"d\")}</span>\n//               </Week>\n//             ))}\n//           </WeekContainer>\n\n//           <WeekControls>\n//             <ControlButton onClick={handlePrevWeek}>&lt;</ControlButton>\n//             <YearSpan>\n//               {format(currentDate, \"MMMM yyyy\", {\n//                 awareOfUnicodeTokens: true,\n//               })}\n//             </YearSpan>\n//             <ControlButton onClick={handleNextWeek}>&gt;</ControlButton>\n//           </WeekControls>\n//         </HeaderContainer>\n//       </FixedHeader>\n//       <Calendar>\n//         <tbody>\n//           {hours.map((hour) => (\n//             <TableRow key={hour}>\n//               <TableCell>{format(hour, \"HH:mm\")}</TableCell>\n//               {currentWeek.map((day) => {\n//                 const event = events.find(\n//                   (e) =>\n//                     e.time === format(new Date(hour), \"HH:mm\") &&\n//                     format(day, \"yyyy-MM-dd\") ===\n//                       format(new Date(e.date), \"yyyy-MM-dd\")\n//                 );\n\n//                 return (\n//                   <TableCell\n//                     key={day}\n//                     className={event ? \"hasEvent\" : \"\"}\n//                     onClick={(e) => {\n//                       chooseToDelete(e);\n//                     }}\n//                   ></TableCell>\n//                 );\n//               })}\n//             </TableRow>\n//           ))}\n//         </tbody>\n//       </Calendar>\n//       <CalendarFooter>\n//         <CalendarFooterContainer>\n//           <ToTodayBtn onClick={toToday}>Today</ToTodayBtn>\n//           {toDelete !== \"\" && (\n//             <DeleteButton onClick={handleDeleteEvent}>Delete</DeleteButton>\n//           )}\n//         </CalendarFooterContainer>\n//       </CalendarFooter>\n//     </Wrapper>\n//   );\n// };\n\n// export default App;\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  format,\n  add,\n  set,\n  addWeeks,\n  isDate,\n  parse,\n  startOfWeek,\n  endOfWeek,\n  startOfToday,\n  eachDayOfInterval,\n  eachHourOfInterval,\n} from \"date-fns\";\nimport CalendarHeader from \"../CalendarHeader/CalendarHeader\";\nimport CalendarBody from \"../CalendarBody/CalendarBody\";\nimport CalendarFooter from \"../CalendarFooter/CalendarFooter\";\n\nconst Wrapper = styled.div`\n  max-width: 740px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (min-width: 740px) {\n    margin: 0 auto;\n  }\n`;\n\nconst App = () => {\n  const today = startOfToday();\n  const [selectedDate, setSelectedDate] = useState(today);\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [events, setEvents] = useState([]);\n  const [toDelete, setToDelete] = useState(\"\");\n  const [currentWeek, setCurrentWeek] = useState(\n    eachDayOfInterval({\n      start: startOfWeek(today, { weekStartsOn: 1 }),\n      end: endOfWeek(today, { weekStartsOn: 1 }),\n    })\n  );\n  const startHour = set(selectedDate, { hours: 9 });\n  const endHour = set(selectedDate, { hours: 22 });\n  const hours = eachHourOfInterval({ start: startHour, end: endHour });\n\n  const handleAddEvent = () => {\n    let enteredDate = prompt(\"Enter event time:\\nYYYY-MM-DD HH:mm:ss\");\n    const re = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$/;\n    if (enteredDate !== null && enteredDate !== \"\") {\n      const parsedDate = parse(enteredDate, \"yyyy-MM-dd HH:mm:ss\", new Date());\n      if (isDate(parsedDate) && re.test(enteredDate)) {\n        const eventDate = format(parsedDate, \"yyyy-MM-dd HH:mm:ss\");\n        const event = {\n          date: format(new Date(eventDate), \"yyyy-MM-dd\"),\n          time: format(new Date(eventDate), \"HH:mm\"),\n        };\n        setEvents([...events, event]);\n      } else {\n        alert(\n          \"Invalid date format. Please enter the date in the format YYYY-MM-DD HH:mm:ss\"\n        );\n      }\n    }\n  };\n\n  const chooseToDelete = (e) => {\n    const target = e.target;\n    document\n      .querySelectorAll(\"td.hasEvent\")\n      .forEach((td) => td.classList.remove(\"active\"));\n    if (target.classList.contains(\"hasEvent\")) {\n      target.classList.add(\"active\");\n      setToDelete(target.classList[1]);\n    } else {\n      setToDelete(\"\");\n    }\n  };\n\n  const handleDeleteEvent = () => {\n    const updatedEvents = events.filter(\n      (event) =>\n        event.date !== format(selectedDate, \"yyyy-MM-dd\") &&\n        event.time !== format(selectedDate, \"HH:mm\")\n    );\n    setEvents(updatedEvents);\n  };\n\n  const handlePrevWeek = () => {\n    setCurrentWeek(\n      eachDayOfInterval({\n        start: startOfWeek(add(currentWeek[0], { weeks: -1 }), {\n          weekStartsOn: 1,\n        }),\n        end: endOfWeek(add(currentWeek[0], { weeks: -1 }), { weekStartsOn: 1 }),\n      })\n    );\n    setCurrentDate((prevDate) => addWeeks(prevDate, -1));\n    setToDelete(\"\");\n  };\n\n  const handleNextWeek = () => {\n    setCurrentWeek(\n      eachDayOfInterval({\n        start: startOfWeek(add(currentWeek[0], { weeks: 1 }), {\n          weekStartsOn: 1,\n        }),\n        end: endOfWeek(add(currentWeek[0], { weeks: 1 }), { weekStartsOn: 1 }),\n      })\n    );\n    setCurrentDate((prevDate) => addWeeks(prevDate, 1));\n\n    setToDelete(\"\");\n  };\n\n  const toToday = () => {\n    setSelectedDate(today);\n    setCurrentWeek(\n      eachDayOfInterval({\n        start: startOfWeek(today, { weekStartsOn: 1 }),\n        end: endOfWeek(today, { weekStartsOn: 1 }),\n      })\n    );\n    setCurrentDate(today);\n    setToDelete(\"\");\n  };\n\n  useEffect(() => {\n    const savedEvents = localStorage.getItem(\"events\");\n    if (savedEvents) {\n      setEvents(JSON.parse(savedEvents));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (events.length > 0) {\n      localStorage.setItem(\"events\", JSON.stringify(events));\n    }\n  }, [events]);\n\n  return (\n    <Wrapper>\n      <CalendarHeader\n        today={today}\n        currentWeek={currentWeek}\n        setCurrentWeek={setCurrentWeek}\n        currentDate={currentDate}\n        setCurrentDate={setCurrentDate}\n        selectedDate={selectedDate}\n        setSelectedDate={setSelectedDate}\n        setToDelete={setToDelete}\n        onAddEvent={handleAddEvent}\n      ></CalendarHeader>\n\n      <CalendarBody\n        hours={hours}\n        currentWeek={currentWeek}\n        events={events}\n        onDelete={chooseToDelete}\n      ></CalendarBody>\n\n      <CalendarFooter\n        onToToday={toToday}\n        toDelete={toDelete}\n        onDeleteEvent={handleDeleteEvent}\n      ></CalendarFooter>\n    </Wrapper>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SACEC,MAAM,EACNC,GAAG,EACHC,GAAG,EACHC,QAAQ,EACRC,MAAM,EACNC,KAAK,EACLC,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,iBAAiB,EACjBC,kBAAkB,QACb,UAAU;AACjB,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,cAAc,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,OAAO,GAAGjB,MAAM,CAACkB,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GATIF,OAAO;AAWb,MAAMG,GAAG,GAAGA,CAAA,KAAM;E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"},"metadata":{},"sourceType":"module","externalDependencies":[]}